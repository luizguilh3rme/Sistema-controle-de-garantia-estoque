@model LoginModel

@{
    Layout = "_LayoutDeslogado";
    ViewData["Title"] = "Login";
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        @TempData["MensagemErro"]
    </div>
}

<form asp-controller="login" asp-action="Entrar" method="post" > @*Entrar vem da controller Login*@
    <div class="mb-3">
        <label for="login" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control" id="login" />
        @Html.ValidationMessageFor(x => x.Login) @*Verifica a validação do login e mostra a mensagem caso não foi preenchido*@
    </div>
    <div class="mb-3">
        <label for="senha" class="form-label">Senha</label>
        <input type="password" asp-for="Senha" class="form-control" id="senha">
        @Html.ValidationMessageFor(x => x.Senha) @*Verifica a validação da senha e mostra a mensagem caso não foi preenchido*@
    </div>
    
    <button type="submit" class="btn btn-primary btn-block">Entrar</button>
</form>